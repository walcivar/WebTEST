// ClientUI.js
(function($){
Type.registerNamespace('ClientUI.Model');ClientUI.Model.Connection=function(){ClientUI.Model.Connection.initializeBase(this,['connection']);}
ClientUI.Model.Connection.prototype={connectionid:null,record1id:null,record1roleid:null,record2id:null,record2roleid:null}
Type.registerNamespace('ClientUI.ViewModel');ClientUI.ViewModel.ConnectionsViewModel=function(){this.connections=new SparkleXrm.GridEditor.EntityDataViewModel(25,ClientUI.Model.Connection,true);this.AllowAddNew=ko.observable(true);ClientUI.ViewModel.ConnectionsViewModel.initializeBase(this);var $0=new ClientUI.ViewModel.ObservableConnection();this.ConnectionEdit=ko.validatedObservable($0);this.ConnectionEdit().add_onSaveComplete(ss.Delegate.create(this,this.$1_1));this.ErrorMessage=ko.observable();this.connections.onDataLoaded.subscribe(ss.Delegate.create(this,this.$1_0));ClientUI.ViewModel.ObservableConnection.registerValidation(this.connections.validationBinder);}
ClientUI.ViewModel.ConnectionsViewModel.prototype={ErrorMessage:null,ConnectionEdit:null,$1_0:function($p0,$p1){var $0=$p1;for(var $1=0;$1<$0.to;$1++){var $2=this.connections.getItem($1);if($2==null){return;}$2.add_propertyChanged(ss.Delegate.create(this,this.connection_PropertyChanged));}},connection_PropertyChanged:function(sender,e){if(e.propertyName==='record1roleid'){var $0=sender;var $1=new ClientUI.Model.Connection();$1.connectionid=new Xrm.Sdk.Guid($0.id);$1.record1roleid=$0.record1roleid;Xrm.Sdk.OrganizationServiceProxy.beginUpdate($1,ss.Delegate.create(this,function($p1_0){
try{Xrm.Sdk.OrganizationServiceProxy.endUpdate($p1_0);this.ErrorMessage(null);}catch($1_0){this.ErrorMessage($1_0.message);}}));}},$1_1:function($p0){if($p0==null){this.ErrorMessage(null);}else{this.ErrorMessage($p0);}},search:function(){this.connections.set_fetchXml("<fetch version='1.0' output-format='xml-platform' mapping ='logical' returntotalrecordcount = 'true' no-lock = 'true' distinct = 'false' count='{0}' paging-cookie='{1}' page='{2}'>\r\n                <entity name ='connection'>\r\n                    <attribute name='record1id' alias='record1id' />   \r\n                    <attribute name='record1roleid' alias='record1roleid' />   \r\n                    <attribute name='record2id' alias='record2id' />   \r\n                    <attribute name='record2roleid' alias='record2roleid' />                   \r\n                    {3}\r\n                   </entity>\r\n                </fetch>");},AddNewCommand:function(){this.ConnectionEdit().AddNewVisible(true);},DeleteSelectedCommand:function(){},OpenAssociatedSubGridCommand:function(){},$1_2:function($p0,$p1){ClientUI.ViewModel.ObservableConnection.roleSearchCommand($p0,$p1);}}
ClientUI.ViewModel.ObservableConnection=function(){this.AddNewVisible=ko.observable(false);this.connectionid=ko.observable();this.record1id=ko.observable();this.record1roleid=ko.observable();this.record2id=ko.observable();this.record2roleid=ko.observable();ClientUI.ViewModel.ObservableConnection.initializeBase(this);ClientUI.ViewModel.ObservableConnection.registerValidation(new SparkleXrm.ObservableValidationBinder(this));}
ClientUI.ViewModel.ObservableConnection.registerValidation=function(binder){binder.register('record1id',ClientUI.ViewModel.ObservableConnection.$1_2);binder.register('record2id',ClientUI.ViewModel.ObservableConnection.$1_1);}
ClientUI.ViewModel.ObservableConnection.$1_1=function($p0,$p1,$p2){return $p0.addRule('Required',function($p1_0){
return ($p1_0!=null)&&($p1_0).id!=null;});}
ClientUI.ViewModel.ObservableConnection.$1_2=function($p0,$p1,$p2){return $p0.addRule('Required',function($p1_0){
return ($p1_0!=null)&&($p1_0).id!=null;});}
ClientUI.ViewModel.ObservableConnection.roleSearchCommand=function(term,callback){var $0="<fetch version='1.0' output-format='xml-platform' mapping ='logical' distinct = 'true'>\r\n                <entity name ='connectionrole'>\r\n                    <attribute name='category' />\r\n                    <attribute name='name' />\r\n                    <attribute name='connectionroleid' />\r\n                    <attribute name='statecode' />\r\n                    <order attribute='name' descending = 'false'/>\r\n                    <filter type = 'and'>\r\n                        <condition attribute='name' operator='like' value='%{0}%' />\r\n                    </filter>\r\n                   </entity>\r\n                </fetch>";$0=String.format($0,Xrm.Sdk.XmlHelper.encode(term),'account','name');Xrm.Sdk.OrganizationServiceProxy.beginRetrieveMultiple($0,function($p1_0){
var $1_0=Xrm.Sdk.OrganizationServiceProxy.endRetrieveMultiple($p1_0,Xrm.Sdk.EntityCollection);callback($1_0);});}
ClientUI.ViewModel.ObservableConnection.prototype={add_onSaveComplete:function(value){this.$1_0=ss.Delegate.combine(this.$1_0,value);},remove_onSaveComplete:function(value){this.$1_0=ss.Delegate.remove(this.$1_0,value);},$1_0:null,SaveCommand:function(){var $0=(this).isValid();if(!$0){(this).errors.showAllMessages(true);return;}this.isBusy(true);var $1=new ClientUI.Model.Connection();$1.record1id=this.record1id();$1.record2id=this.record2id();$1.record1roleid=this.record1roleid();$1.record2roleid=this.record2roleid();Xrm.Sdk.OrganizationServiceProxy.beginCreate($1,ss.Delegate.create(this,function($p1_0){
try{this.connectionid(Xrm.Sdk.OrganizationServiceProxy.endCreate($p1_0));this.$1_0(null);(this).errors.showAllMessages(false);}catch($1_0){this.$1_0($1_0.message);}finally{this.isBusy(false);this.AddNewVisible(false);}}));},recordSearchCommand:function(term,callback){var $0="<fetch version='1.0' output-format='xml-platform' mapping ='logical' distinct = 'true'>\r\n                <entity name ='{1}'>\r\n                    <attribute name='{2}' alias='name' />                   \r\n                    <order attribute='{2}' descending = 'false'/>\r\n                    <filter type = 'and'>\r\n                        <condition attribute='{2}' operator='like' value='%{0}%' />\r\n                    </filter>\r\n                   </entity>\r\n                </fetch>";$0=String.format($0,Xrm.Sdk.XmlHelper.encode(term),'account','name');Xrm.Sdk.OrganizationServiceProxy.beginRetrieveMultiple($0,function($p1_0){
var $1_0=Xrm.Sdk.OrganizationServiceProxy.endRetrieveMultiple($p1_0,Xrm.Sdk.EntityCollection);callback($1_0);});}}
Type.registerNamespace('ClientUI.View');ClientUI.View.ConnectionsView=function(){}
ClientUI.View.ConnectionsView.Init=function(){Xrm.PageEx.majorVersion=2013;ClientUI.View.ConnectionsView.vm=new ClientUI.ViewModel.ConnectionsViewModel();SparkleXrm.ViewBase.registerViewModel(ClientUI.View.ConnectionsView.vm);var $0=new SparkleXrm.GridEditor.GridDataViewBinder();var $1=SparkleXrm.GridEditor.GridDataViewBinder.parseLayout('Connect to, record1id,250,Role,record1roleid,250');SparkleXrm.GridEditor.XrmLookupEditor.bindColumn($1[1],ss.Delegate.create(ClientUI.View.ConnectionsView.vm,ClientUI.View.ConnectionsView.vm.$1_2),'connectionroleid','name','');var $2=$0.dataBindXrmGrid(ClientUI.View.ConnectionsView.vm.connections,$1,'container','pager',true,false);SparkleXrm.ViewBase.registerViewModel(ClientUI.View.ConnectionsView.vm);$(function(){
ClientUI.View.ConnectionsView.vm.search();});}
ClientUI.Model.Connection.registerClass('ClientUI.Model.Connection',Xrm.Sdk.Entity);ClientUI.ViewModel.ConnectionsViewModel.registerClass('ClientUI.ViewModel.ConnectionsViewModel',SparkleXrm.ViewModelBase);ClientUI.ViewModel.ObservableConnection.registerClass('ClientUI.ViewModel.ObservableConnection',SparkleXrm.ViewModelBase);ClientUI.View.ConnectionsView.registerClass('ClientUI.View.ConnectionsView');ClientUI.View.ConnectionsView.vm=null;})(window.xrmjQuery);